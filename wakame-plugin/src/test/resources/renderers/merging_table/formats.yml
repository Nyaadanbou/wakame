# 在这里设置合并台的物品 *渲染内容*.

# id: `custom_name`
custom_name:
  namespace: vanilla
  # 可用标签
  # <value> 物品的 `minecraft:custom_name`
  tooltip: "定制名: <value>"

# id: `elements`
elements:
  namespace: general
  # 可用标签
  # <merged> 多个元素合并后的文本
  # <single> 单个元素
  tooltip:
    merged: "元素: <merged>"
    single: "<single>"
    separator: ", "

# id: `item_name`
item_name:
  namespace: vanilla
  # 可用标签
  # <value> 物品的 `minecraft:item_name`
  tooltip: "物品名: <value>"

# id: `level`
level:
  namespace: general
  # 可用标签
  # <value> 等级值
  tooltip: "等级: <value>"

# id: `merge_input`
merge_input:
  namespace: reforge
  # 可用标签:
  # <desc> 属性的描述
  # <qual> 数值的质量
  merged: "<desc><qual>"
  # 属性数值的好坏格式. 按顺序进行如下判断:
  # 当 z-score <3 或 z-score >3 时, 输出 l3 或 u3
  # 当 z-score <2 或 z-score >2 时, 输出 l2 或 u2
  # 当 z-score <1 或 z-score >1 时, 输出 l1 或 u1
  # 否则, 输出 mu
  quality:
    l3: "<red>***</red>"
    l2: "<red>**</red>"
    l1: "<red>*</red>"
    mu: ""
    u1: "<green>*</green>"
    u2: "<green>**</green>"
    u3: "<green>***</green>"

# id: `merge_output`
merge_output:
  namespace: reforge
  # 输出的属性值的渲染格式
  # 这里将沿用属性本身的描述, 但支持对数值部分进行混淆
  attribute_format:
    # 要混淆的模式 (regex)
    pattern: "[+-]?\\d+(\\.\\d+)?"
    # 混淆后的内容
    replacement: "???"

# id: `rarity`
rarity:
  namespace: general
  # 可用标签
  # <rarity_display_name> 稀有度的名字
  # <reforge_mod_count> 被重铸的次数
  # 重铸次数为零的格式
  simple: "稀有度: <rarity_display_name>"
  # 重铸次数不为零的格式
  complex: "稀有度: <rarity_display_name> [<reforge_mod_count>]"
