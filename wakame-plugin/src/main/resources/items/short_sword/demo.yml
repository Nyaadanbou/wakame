# !!! 所有内容均区分大小写 !!!

# UUID
# 必填
# 必须保证不存在两类物品 UUID 一致的情况
# 生成工具：https://www.uuidgenerator.net/version7
uuid: cfee549f-e4d7-4574-b104-92d8251ebee4

# 原版物品类型
item_type: wooden_sword

# 是否完全隐藏物品提示框（包括物品名字）
hide_tooltip: false

# 是否隐藏物品提示框里的额外信息（例如不祥之瓶的药水效果）
hide_additional_tooltip: false

# 开发日记 2024/6/25
# shown_in_tooltip 是原版组件里的一个选项, 用于控制一个物品组件是否显示在提示框.
# 按照我们新的物品框架, 一个物品组件可以是原版物品组件的代理, 也就是说
# 我们也许不需要有一个专门的 config section 来配置 shown_in_tooltip.
# 我们可以把 show_in_tooltip 放在每个物品组件的设置里?
#
# 在提示框内显示特定的原版物品信息
# true/false: 显示/不显示
shown_in_tooltip:
  trim: false
  attribute_modifiers: false
  can_break: false
  dyed_color: false
  enchantments: true
  can_place_on: false
  stored_enchantments: false
  unbreakable: false

# 开发日记 2024/6/25
# 在物品生成的过程中, 移除原版物品组件将发生在最后阶段
#
# 需要移除的原版物品组件
# 相当于原版的 `!minecraft:attribute_modifiers` 操作
# 名字参考: https://minecraft.wiki/w/Data_component_format
remove_components:
  - attribute_modifiers
  - food
  - tool

# 模型设置
# 基本概念: 每个物品有一个或多个变体, 每个变体可以指定一个模型
#          一个物品具体用用什么模型, 取决于它的当前变体是什么
#          每个物品至少有一个数值为 0 的变体
# 以下设置的意思是:
#   变体为 0 时, 采用模型 demo.json
#   变体为 1 时, 采用模型 demo_1.json
assets:
  - variant: 0
    path: "models/item/short_sword/demo.json"
  - variant: 1
    path: "models/item/short_sword/demo_1.json"

# 生效栏位
# 可选，默认 无
# 可用选项：
# - MAIN_HAND
# - OFF_HAND
# - HELMET
# - CHESTPLATE
# - LEGGINGS
# - BOOTS
# - SLOT_1 (仅测试用)
# - SLOT_2 (仅测试用)
# - SLOT_3 (仅测试用)
# - SLOT_4 (仅测试用)
slot: MAIN_HAND

# 物品名字
#
# When present, replaces default item name with contained chat component.
# Differences from {@link #CUSTOM_NAME}:
# - can't be changed or removed in Anvil
# - is not styled with italics when displayed to player
# - does not show labels where applicable
#   (for example: banner markers, names in item frames)
#
# 额外标签:
# <rarity:name> 稀有度名字
# <rarity:style> 稀有度样式
item_name: "<rarity:style><rarity:name> Item Name Demo"

# 自定义名字
#
# 额外标签:
# <rarity:name> 稀有度名字
# <rarity:style> 稀有度样式
custom_name: "<!i><rarity:style>Custom Name Demo"

# 额外的描述
lore:
  - "<gold>Demo Lore 1"
  - "<gold>Demo Lore 2"

# 开发日记: 2024/6/24
# 按照小福米说的, wakame 应该始终是底层代码的抽象.
# 因此在配置文件中, 哪些是 behaviors, 哪些是 components, 应该不做明确的区分.
# 也就是对于策划来说, 他并不需要知道 behaviors 和 components 的区别.
# 他所需要知道的, 就是如果配置文件写了这个“东西”, 那生成出来的物品就有这个“东西”. 反之如果没写, 那生成出来的物品就没有.
# 这一点非常类似原版的物品组件系统.
#
# 例如, 这里指定的 castable 它是一个纯粹的 behavior, 有这个 behavior 物品就可以释放技能 (前提是词条栏里有技能).
# 再来看另一个, attributable 是一个纯粹的 component, 有这个 component 物品就可以提供属性加成 (前提是词条栏里有属性).
# 比较特殊的 damageable 是一个 component + behavior 的复合体, 其 component 负责储存耐久度信息,
# 而 behavior 负责实现修复的交互逻辑 (例如想做一个拿着修复材料跟物品交换位置就可以修复的功能).
#
# 可以释放技能?
castable: { }

# 作为盲盒
crate:
  # 物品绑定的盲盒 id
  key: "foo:bar"

# 追踪数据
# 例如记录物品击杀过的怪物数量
tracks: { }

# 作为弹药
arrow:
  pierce_level: 3

# 提供属性加成?
attributable: { }

# 提供铭刻加成?
kizamiable: { }

# 提供技能加成?
skillful: { }

# 免疫火焰?
fire_resistant: { }

# 作为食物?
food:
  nutrition: 0
  saturation: 0.0
  can_always_eat: false
  eat_seconds: 1.6
  effects:
    probability: 0.9
    effect:
      - type: speed
        duration: 1
        amplifier: 0
        ambient: false
        particles: true
        icon: true
  skills:
    - "foo:bar"

# 不损失耐久?
unbreakable:
  show_in_tooltip: true

# 耐久度
damageable:

  # 初始损耗
  # 可选
  # 可写成正态分布的形式
  damage: 0

  # 最大损耗
  # 必填
  # 可写成正态分布的形式
  max_damage: 512

  # 开发日记 2024/6/25 如何更新游戏世界里的数据:
  # 策划可能会在游戏中途修改一个物品可以用的修复材料类型,
  # 如果材料的类型是储存在NBT里的,那就需要手段来更新NBT.
  # 比较好的解决办法是修复这个机制应该完全由重铸工作台实现,
  # 也就是修复物品所需要的材料直接在重铸工作台的配置文件里指定.

  # 物品损耗等于最大时, 物品是否消失
  disappear_when_broken: false

# 皮肤
skin:
  - name: <red>demo_1
    predicate:
      open: 0
      close: 1
    permission: ads
    cost: 123
  - name: <red>demo_2
    predicate:
      open: 2
      close: 3
    permission: qwe
    cost: 123

# 皮肤所有者
# 用于手动设置默认皮肤的所有者
skin_owner: 174eb4a8-20d1-4838-ab07-877cd1d68c14

# 等级
# A. 如果写 CONTEXT，则根据上下文生成（玩家或盲盒）
# B. 如果写 <正整数>，则始终以这里指定的物品等级生成
# 如果选择 A，只有当物品的上下文存在时，等级才会有效
# 对于以上情况，如果遇到无效等级，则会采用最小等级 0
level: CONTEXT

# 稀有度
# 如果写 "mapping:<唯一标识>"，则根据唯一标识对应的映射生成
# 如果写 "rarity:<稀有度名>"，则始终以这里指定的稀有度生成
rarity: mapping:demo_1

# 元素标识
elements:

  # 抽选 n 个元素作为该物品的元素标识
  sample: 2

  # 条件，可用于实现特定条件下完全不生成元素
  filters: [ ]

  # 候选的元素标识，以及它们各自的权重
  entries:
    - value: neutral
      weight: 2
    - value: water
      weight: 1
    - value: fire
      weight: 1
    - value: wind
      weight: 1

# 铭刻标识
kizamiz:
  pool_a:

    # 抽选 n 个元素作为该物品的铭刻
    sample: 3

    # 条件，可用于实现特定条件下完全不生成铭刻
    filters:
      - type: rarity
        rarity: rare

    # 候选的铭刻标识，以及它们各自的权重
    entries:
      - value: wood
        weight: 5
      - value: iron
        weight: 4
      - value: gold
        weight: 3
      - value: diamond
        weight: 2
      - value: netherite
        weight: 1

  pool_b:
    sample: 2
    filters:
      - type: rarity
        rarity: uncommon
    entries:
      - value: wood
        weight: 5
      - value: iron
        weight: 4
      - value: gold
        weight: 3
      - value: diamond
        weight: 2
      - value: netherite
        weight: 1
  pool_c:
    sample: 1
    filters:
      - type: rarity
        rarity: common
    entries:
      - value: wood
        weight: 5
      - value: iron
        weight: 4
      - value: gold
        weight: 3
      - value: diamond
        weight: 2
      - value: netherite
        weight: 1

# 词条栏
cells:
  # 定义“词条栏容器”有哪些, 以及这些词条栏在生成核心时所使用的选择器
  # 物品生成将按照该列表的顺序进行, 例如这里是依次生成 a,b,c,d,e,f
  buckets:
    a:
      core: core_a
      curse: curse_a
    b:
      core: core_b
      curse: curse_b
    c:
      core: core_c
      curse: curse_c
    d:
      core: core_d
      curse: curse_d
    e:
      core: core_e
      curse: curse_e
    f:
      core: core_f
      curse: curse_f
  # 定义“词条栏核心”的选择器
  selectors:
    # 核心池
    #
    # 这里定义的核心池只是数据，仅供核心组引用，单独自己没有实际作用（不会在物品上出现）
    # 这些核心池需要在 core_groups.<group>.selects.<pool> 被引用才会产生实际作用
    #
    # 池也可以直接定义在组里，这里主要用来定义会反复使用的池，以避免写大量重复的配置
    core_pools:

      # 这里定义了一个核心池
      # 其 id 为 shared_pool_1
      # 可以被 core_groups.<group>.selects.<pool> 引用
      shared_pool_1:

        # 进入该池需要满足的条件
        # 如果有多个条件 c1,c2,...,cn 意思是 AND(c1,c2,...,cn)
        # 写成 `[ ]` 或直接删除该节点，表示没有条件，也就是始终满足
        #
        # 如果条件不满足，则进入下一个满足条件的核心池
        #
        # 所有可用的条件将做单独说明，这里不再赘述
        filters: [ ]

        # 该池包含的所有核心
        entries:
          - key: attribute:max_health
            value: 20
            weight: 1

      # 定义的另一个核心池
      # 其 id 为 shared_pool_2
      shared_pool_2:
        filters: [ ]
        entries:
          - key: attribute:max_mana
            value: 100
            weight: 1
            filters: [ ]

    # 核心组
    core_groups:

      # 核心组：core_a
      # 这也是该核心组的 id，将被 cells.[].core 调用
      core_a:

        # 进入该核心组需要满足的条件
        # 如果有多个条件 c1,c2,...,cn 意思是 AND(c1,c2,...,cn)
        # 写成 `[ ]` 或直接删除该节点，表示没有条件，也就是始终满足
        #
        # 如果条件不满足，则没有核心生成
        filters: [ ]

        # 该核心组包含的所有核心池
        # 生成时，将进入第一个满足条件的池，然后生成内容
        # 这也意味着，条件越难的池应该写在越前面的位置
        #
        # 一旦进入一个池，将不会再退出然后再进入其他的池
        # 这意味着如果一个池内没有生成内容（例如由于核心自己的条件不满足），那么对应的词条栏也将没有内容
        selects:

          # 该核心组的一个候选池
          pool_1:
            filters:
              - type: rarity
                rarity: rare
            entries:
              - key: attribute:attack_damage

                # 修饰符的运算模式，可省略，默认为 add，可用值 multiply_base, multiply_total
                operation: add

                # 属性的元素
                element: neutral

                # 这是一个固定数值的写法，节点后直接跟数值
                lower: 15

                # 这是一个正态分布的写法，节点下需要创建新的缩进然后按格式编写
                upper:
                  base: 30 # 正态分布的平均值
                  scale: 0 # 等级加成，数值为 scale * level，可省略，默认为 0
                  spread: 0.2 # 正态分布的标准差的“比例”
                  min: -0.4 # 正态分布的最小“浮动比例”，可省略，默认为 -spread * 3
                  max: 0.4 # 正态分布的最大“浮动比例，可省略，默认为 spread * 3

                # 该样本的权重
                weight: 1
              - key: attribute:critical_strike_chance
                value:
                  base: 0.75
                  spread: 0.1
                  min: -0.2
                  max: 0.3
                weight: 1
              - key: attribute:critical_strike_power
                value: 0.52
                weight: 1
                filters:
                  - type: item_level
                    level: "[20,)"

          # 该核心组的第二个候选池
          pool_2:
            filters:
              - type: rarity
                rarity: common
            entries:
              - key: attribute:attack_damage
                element: neutral
                lower: 10
                upper: 15
                weight: 1
              - key: attribute:critical_strike_chance
                value: 0.5
                weight: 1
              - key: attribute:critical_strike_power
                value: 0.25
                weight: 1
                filters:
                  - type: item_level
                    level: "[10,)"

        # 备用池，如果 selects 中没有满足条件的池，将使用备用池
        # 写成 `[ ]` 或直接删除该节点，表示没有备用池
        default:
          - key: attribute:attack_damage
            element: neutral
            lower: 5
            upper: 8
            weight: 1
          - key: attribute:critical_strike_chance
            value:
              base: 0.3
              scale: 0.1
            weight: 1

      # 核心组：core_b
      core_b:
        filters:
          - type: rarity
            rarity: common
        selects:
          pool_1: shared_pool_1 # 这里使用了 core_pools.shared_pool_1
        default: [ ]

      # 核心组：core_c
      core_c:
        filters: [ ]
        selects:
          pool_1: shared_pool_2 # 这里使用了 cire_pools.shared_pool_2
        default: [ ]

      # 核心组：core_d
      # 这是一个只有固定内容的词条栏的基本写法
      core_d:
        filters: [ ]
        selects: { }
        default:
          - key: generic:noop
            weight: 10
          - key: generic:empty
            weight: 10
          - key: attribute:lifesteal
            value: 0.2
            weight: 10
          - key: attribute:manasteal
            value: 0.21
            weight: 10

      # 核心组：core_e
      core_e:
        filters: [ ]
        selects:
          fire:
            filters:
              - type: element
                element: fire
            entries:
              - key: attribute:attack_damage
                element: fire
                lower: 10
                upper: 16
                weight: 8
              - key: attribute:attack_damage
                element: fire
                lower: 0.1
                upper: 0.1
                operation: multiply_base
                weight: 8
              - key: attribute:attack_effect_chance
                element: fire
                value: 0.38
                weight: 8
          water:
            filters:
              - type: element
                element: water
            entries:
              - key: attribute:attack_damage
                element: water
                lower: 10
                upper: 17
                weight: 8
              - key: attribute:attack_damage
                element: water
                lower: 0.2
                upper: 0.2
                operation: multiply_base
                weight: 8
              - key: attribute:attack_effect_chance
                element: water
                value: 0.42
                weight: 8
          wind:
            filters:
              - type: element
                element: wind
            entries:
              - key: attribute:attack_damage
                element: wind
                lower: 10
                upper: 18
                weight: 8
              - key: attribute:attack_damage
                element: wind
                lower: 0.3
                upper: 0.3
                operation: multiply_base
                weight: 8
              - key: attribute:attack_effect_chance
                element: wind
                value: 0.56
                weight: 8
        default: [ ] # 这里没有定义 fallback

      # 核心组：core_f
      core_f:
        filters: [ ]
        selects:
          skill:
            entries:
              - key: skill:melee/dash
                trigger: trigger:combo/110
                weight: 2
              - key: skill:melee/kill_entity
                trigger: trigger:generic/attack
                weight: 1
        default: [ ]

    # 诅咒池
    #
    # 这里定义的诅咒池只是数据，仅供诅咒组引用，而无实际作用
    # 这些诅咒池需要在 curse_groups.<group>.selects.<pool>
    # 被引用才会产生实际作用（在物品上出现）
    curse_pools:
      shared_pool_1:
        filters: [ ]
        entries:
          - key: curse:entity_kills
            index: demo_bosses_1
            count: 2
            weight: 1
          - key: curse:entity_kills
            index: demo_bosses_2
            count: 2
            weight: 1
          - key: curse:entity_kills
            index: demo_bosses_3
            count: 2
            weight: 1
      shared_pool_2:
        filters: [ ]
        entries:
          - key: curse:peak_damage
            amount: 20
            element: fire
            weight: 1
          - key: curse:peak_damage
            amount: 32
            element: water
            weight: 1

    # 诅咒组
    curse_groups:

      # 诅咒组：curse_a
      curse_a: # 该诅咒组的 id，将被 cells.[].curse 调用
        filters: [ ]
        selects:
          pool_1: shared_pool_1 # 这里引用了 curse_pools.shared_pool_1
        default:
          - key: curse:entity_kills
            index: demo_creeps_1
            count: 2
            weight: 1
          - key: curse:entity_kills
            index: demo_creeps_2
            count: 2
            weight: 1
          - key: curse:entity_kills
            index: demo_creeps_3
            count: 2
            weight: 1
          - key: generic:empty
            weight: 2

      # 诅咒组：curse_b
      curse_b:
        filters: [ ]
        selects:
          pool_1: shared_pool_2 # 这里引用了 curse_pools.shared_pool_2
        default:
          - key: curse:peak_damage
            amount: 10
            element: fire
            weight: 1
          - key: curse:peak_damage
            amount: 16
            element: water
            weight: 1
          - key: generic:empty
            weight: 3

      # 诅咒组：curse_c
      curse_c:
        filters: [ ]
        selects: { }
        default:
          - key: curse:peak_damage
            amount: 20
            element: fire
            weight: 1
          - key: generic:empty
            weight: 3

      # 诅咒组：curse_d
      curse_d:
        filters: [ ]
        selects: { }
        default:
          - key: curse:peak_damage
            amount: 30
            element: water
            weight: 1

      # 诅咒组：curse_e
      curse_e:
        filters: [ ]
        selects: { }
        default:
          - key: curse:peak_damage
            amount: 40
            element: fire
            weight: 1

      # 诅咒组：curse_f
      curse_f:
        filters: [ ]
        selects: { }
        default:
          - key: curse:peak_damage
            amount: 50
            element: water
            weight: 1
