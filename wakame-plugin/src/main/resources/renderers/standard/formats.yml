# 控制标准物品的 *渲染格式*.

# 物品组件
components:

  attributable:
    namespace: component
    tooltip: "<!i>提供属性加成"

  castable:
    namespace: component
    tooltip: "<!i>可以施放技能"

  cells:
    namespace: component
    max_visible_empty_cores: 10
    empty_core:
      name: "<!i>空词条栏"
      lore: "<!i>空词条栏"

  # TODO 盲盒系统完成后再重新考虑
  crate:
    namespace: component
    tooltip: "<!i>盲盒: <key>"

  custom_name:
    namespace: component
    tooltip: "<!i><rarity_style><value>"

  elements:
    namespace: component
    tooltip:
      merged: "<!i>元素: <merged>"
      single: "<single>"
      separator: ", "

  # TODO 待附魔系统完成后再重新考虑
  enchantments:
    namespace: component
    tooltip: "<name> <level>"

  fire_resistant:
    namespace: component
    tooltip: "<!i>免疫火焰伤害"

  glowable:
    namespace: component
    tooltip: "可发光"

  item_name:
    namespace: component
    tooltip: "<rarity_style><rarity_name> <value>"

  kizamiz:
    namespace: component
    tooltip:
      merged: "<!i>铭刻: <merged>"
      single: "<single>"
      separator: ", "

  kizamiable:
    namespace: component
    tooltip: "<!i>提供铭刻加成"

  level:
    namespace: component
    tooltip: "<!i>等级: <value>"

  lore:
    namespace: component
    tooltip:
      line: "<!i><line>"
      header: [ ] # 空列表代表完全没有，不代表空行
      bottom: [ ]

  max_damage:
    namespace: component
    tooltip: "<!i>最大耐久损耗: <max_damage>"

  portable_core:
    namespace: component
    tooltip: { } # 取决于核心

  rarity:
    namespace: component
    tooltip: "<!i>稀有度: <value>"

  skillful:
    namespace: component
    tooltip: "<!i>提供技能加成"

  skin:
    namespace: component
    tooltip: "<!i>皮肤: <skin_name>"

  skin_owner:
    namespace: component
    tooltip: "<!i>皮肤所有者: <skin_owner_name>"

  # TODO 待附魔系统完成后再重新考虑
  stored_enchantments:
    namespace: component
    tooltip: "<name> <level>"
